{"ast":null,"code":"import { ADD_REMINDER, DELETE_REMINDER, EDIT_REMINDER } from \"../actions/actionTypes\";\nlet initialState = {\n  reminders: []\n};\n\nconst reminderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_REMINDER:\n      return Object.assign({}, state, {\n        reminders: [...state.reminders, action.payload]\n      });\n\n    case EDIT_REMINDER:\n      return Object.assign({}, state, {\n        reminders: state.reminders.map(reminder => reminder.id === action.id ? // transform the one with a matching id\n        { ...reminder,\n          ...action.payload\n        } : // otherwise return original reminder\n        reminder)\n      });\n\n    case DELETE_REMINDER:\n      return Object.assign({}, state, {\n        reminders: state.reminders.filter(item => item.id !== action.id)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reminderReducer;","map":{"version":3,"sources":["C:/Users/shubh/Pictures/Camera Roll/calendar-scheduler-master/src/redux/reducers/reminderReducer.js"],"names":["ADD_REMINDER","DELETE_REMINDER","EDIT_REMINDER","initialState","reminders","reminderReducer","state","action","type","Object","assign","payload","map","reminder","id","filter","item"],"mappings":"AAAA,SACEA,YADF,EACgBC,eADhB,EACiCC,aADjC,QAEO,wBAFP;AAIA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE;AADM,CAAnB;;AAIA,MAAMC,eAAe,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,YAAL;AACE,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEF,QAAAA,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqBG,MAAM,CAACI,OAA5B;AAAb,OAAzB,CAAP;;AAEF,SAAKT,aAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBQ,GAAhB,CAAqBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBP,MAAM,CAACO,EAAvB,GAC3C;AACA,UAAC,GAAGD,QAAJ;AAAc,aAAGN,MAAM,CAACI;AAAxB,SAF2C,GAG3C;AACAE,QAAAA,QAJS;AADmB,OAAzB,CAAP;;AASF,SAAKZ,eAAL;AACE,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBW,MAAhB,CAAwBC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYP,MAAM,CAACO,EAApD;AADmB,OAAzB,CAAP;;AAGF;AACE,aAAOR,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,eAAeD,eAAf","sourcesContent":["import {\n  ADD_REMINDER, DELETE_REMINDER, EDIT_REMINDER\n} from \"../actions/actionTypes\";\n\nlet initialState = {\n  reminders: []\n};\n\nconst reminderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_REMINDER:\n      return Object.assign({}, state, { reminders: [...state.reminders, action.payload] });\n\n    case EDIT_REMINDER:\n      return Object.assign({}, state, {\n        reminders: state.reminders.map((reminder) => reminder.id === action.id ?\n          // transform the one with a matching id\n          {...reminder, ...action.payload } :\n          // otherwise return original reminder\n          reminder\n        )\n      });\n\n    case DELETE_REMINDER:\n      return Object.assign({}, state, {\n        reminders: state.reminders.filter((item) => item.id !== action.id)\n      });\n    default:\n      return state;\n  }\n};\n\nexport default reminderReducer;\n"]},"metadata":{},"sourceType":"module"}