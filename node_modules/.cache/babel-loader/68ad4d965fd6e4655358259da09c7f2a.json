{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shubh\\\\Pictures\\\\Camera Roll\\\\calendar-scheduler-master\\\\src\\\\components\\\\ReminderPopOverComponent\\\\ReminderPopOverComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as dateFns from 'date-fns';\nimport { withStyles } from '@material-ui/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport ReminderForm from \"./form-components/ReminderForm\";\nimport { closePopOverAction, selectDateAction } from \"../../redux/actions/calendarActions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport { MonthDayYearFormat } from \"../../utils/date-formats\";\nimport { addReminderAction } from \"../../redux/actions/reminderActions\";\nconst styles = {\n  typography: {\n    padding: \"10px\"\n  }\n};\n\nclass ReminderPopOverComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.props.closePopOver();\n    };\n\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  render() {\n    const {\n      classes,\n      openPopOver,\n      closePopOver,\n      anchorEl,\n      selectedDate,\n      addReminder\n    } = this.props;\n    const id = openPopOver ? 'simple-popover' : undefined;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Popover, {\n      id: id,\n      open: openPopOver,\n      anchorEl: anchorEl,\n      onClose: this.handleClose,\n      anchorOrigin: {\n        vertical: 'center',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.typography,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Add Reminder for\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 18\n      }\n    }, dateFns.format(selectedDate, MonthDayYearFormat))), /*#__PURE__*/React.createElement(ReminderForm, {\n      className: classes.typography,\n      selectedDate: selectedDate,\n      closePopOver: closePopOver,\n      addReminder: addReminder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    selectedDate,\n    currentMonth,\n    openedPopOver,\n    anchorEl\n  } = state.calendar;\n  return {\n    selectedDate: selectedDate,\n    currentMonth: currentMonth,\n    openedPopOver: openedPopOver,\n    anchorEl: anchorEl\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  selectDate: date => dispatch(selectDateAction(date)),\n  closePopOver: () => dispatch(closePopOverAction()),\n  addReminder: reminder => dispatch(addReminderAction(reminder))\n});\n\nReminderPopOverComponent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ReminderPopOverComponent));","map":{"version":3,"sources":["C:/Users/shubh/Pictures/Camera Roll/calendar-scheduler-master/src/components/ReminderPopOverComponent/ReminderPopOverComponent.js"],"names":["React","PropTypes","dateFns","withStyles","Popover","Typography","ReminderForm","closePopOverAction","selectDateAction","connect","MonthDayYearFormat","addReminderAction","styles","typography","padding","ReminderPopOverComponent","Component","constructor","props","handleClose","closePopOver","bind","render","classes","openPopOver","anchorEl","selectedDate","addReminder","id","undefined","vertical","horizontal","format","mapStateToProps","state","currentMonth","openedPopOver","calendar","mapDispatchToProps","dispatch","selectDate","date","reminder","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as dateFns from 'date-fns';\nimport { withStyles } from '@material-ui/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport ReminderForm from \"./form-components/ReminderForm\";\n\nimport {\n  closePopOverAction,\n  selectDateAction\n} from \"../../redux/actions/calendarActions\";\n\nimport connect from \"react-redux/es/connect/connect\";\nimport {MonthDayYearFormat} from \"../../utils/date-formats\";\nimport {addReminderAction} from \"../../redux/actions/reminderActions\";\n\nconst styles =  ({\n  typography: {\n    padding: \"10px\",\n  },\n});\n\n\nclass ReminderPopOverComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClose= () => {\n    this.props.closePopOver();\n  }\n\n  render() {\n    const { classes,\n      openPopOver,\n      closePopOver,\n      anchorEl,\n      selectedDate,\n      addReminder,\n    } = this.props;\n\n    const id = openPopOver ? 'simple-popover' : undefined;\n\n    return (\n      <div>\n        <Popover\n          id={id}\n          open={openPopOver}\n          anchorEl={anchorEl}\n          onClose={this.handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography className={classes.typography}>\n            Add Reminder for\n            <br/><b>{dateFns.format(selectedDate, MonthDayYearFormat)}</b>\n          </Typography>\n          <ReminderForm\n            className={classes.typography}\n            selectedDate={selectedDate}\n            closePopOver={closePopOver}\n            addReminder={addReminder}\n          />\n        </Popover>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  const {\n    selectedDate,\n    currentMonth,\n    openedPopOver,\n    anchorEl,\n  } = state.calendar;\n\n\n\n  return {\n    selectedDate: selectedDate,\n    currentMonth: currentMonth,\n    openedPopOver: openedPopOver,\n    anchorEl: anchorEl,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  selectDate: (date) => dispatch(selectDateAction(date)),\n  closePopOver: () => dispatch(closePopOverAction()),\n  addReminder: (reminder) => dispatch(addReminderAction(reminder))\n});\n\n\n\nReminderPopOverComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(ReminderPopOverComponent));\n\n\n\n"]},"metadata":{},"sourceType":"module"}