{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shubh\\\\Pictures\\\\Camera Roll\\\\calendar-scheduler-master\\\\src\\\\components\\\\ReminderListComponent\\\\reminder-list\\\\ExpansionReminder.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport 'date-fns';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Button from '@material-ui/core/Button';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker } from '@material-ui/pickers';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { getPrettyTime, getRightTimeDate } from \"../../../utils/date-functions\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: \"10px\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  },\n  datePickers: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    width: 150\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    zIndex: 10\n  }\n}));\n\nconst ExpansionReminder = props => {\n  _s();\n\n  const classes = useStyles();\n  const [reminderText, setReminderText] = React.useState(\"\");\n  const [selectedTime, setSelectedTime] = React.useState(new Date());\n  React.useEffect(() => {\n    setSelectedTime(props.reminder.reminderDate);\n  }, [props.reminder.reminderDate]);\n\n  const handleTextChange = event => {\n    let text = event.target.value;\n    setReminderText(text);\n  };\n\n  const handleTimeChange = time => {\n    console.log(time);\n    let realTime = getRightTimeDate(props.reminder.selectedDate, time);\n    setSelectedTime(realTime);\n  };\n\n  const handleEditReminder = e => {\n    e.preventDefault();\n    let reminder = {\n      id: props.reminder.id,\n      selectedDate: props.reminder.selectedDate,\n      reminderDate: selectedTime,\n      text: reminderText,\n      time: getPrettyTime(selectedTime)\n    };\n    props.editReminder(reminder);\n    props.closeReminderList();\n  };\n\n  const handleDeleteReminder = e => {\n    e.preventDefault();\n    let reminder = {\n      id: props.reminder.id,\n      selectedDate: props.reminder.selectedDate,\n      reminderDate: selectedTime,\n      text: reminderText,\n      time: getPrettyTime(selectedTime)\n    };\n    props.deleteReminder(reminder);\n    props.closeReminderList();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleEditReminder,\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    placeholder: props.reminder.text,\n    required: true,\n    type: \"text\",\n    id: \"standard-basic\",\n    className: classes.textField,\n    margin: \"normal\",\n    onChange: handleTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardTimePicker, {\n    className: classes.datePickers,\n    id: \"time-picker\",\n    label: \"Time picker\",\n    value: selectedTime,\n    onChange: handleTimeChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change time'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: handleEditReminder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"secondary\",\n    className: classes.button,\n    onClick: handleDeleteReminder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"Delete\"))));\n};\n\n_s(ExpansionReminder, \"dGDAO9oIfqSnp9H77inOzEvxxyA=\", false, function () {\n  return [useStyles];\n});\n\n_c = ExpansionReminder;\nexport default ExpansionReminder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpansionReminder\");","map":{"version":3,"sources":["C:/Users/shubh/Pictures/Camera Roll/calendar-scheduler-master/src/components/ReminderListComponent/reminder-list/ExpansionReminder.js"],"names":["React","makeStyles","TextField","DateFnsUtils","Button","MuiPickersUtilsProvider","KeyboardTimePicker","FormControl","getPrettyTime","getRightTimeDate","useStyles","theme","container","padding","textField","marginLeft","spacing","marginRight","width","datePickers","marginTop","button","zIndex","ExpansionReminder","props","classes","reminderText","setReminderText","useState","selectedTime","setSelectedTime","Date","useEffect","reminder","reminderDate","handleTextChange","event","text","target","value","handleTimeChange","time","console","log","realTime","selectedDate","handleEditReminder","e","preventDefault","id","editReminder","closeReminderList","handleDeleteReminder","deleteReminder"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'date-fns';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker\n} from '@material-ui/pickers';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport {getPrettyTime, getRightTimeDate} from \"../../../utils/date-functions\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: \"10px\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400,\n  },\n  datePickers: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    width: 150,\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    zIndex: 10\n  }\n\n}));\n\nconst ExpansionReminder = (props) => {\n  const classes = useStyles();\n\n  const [reminderText, setReminderText] = React.useState(\"\");\n  const [selectedTime, setSelectedTime] = React.useState(new Date());\n\n  React.useEffect(() => {\n    setSelectedTime(props.reminder.reminderDate);\n  }, [props.reminder.reminderDate]);\n\n  const handleTextChange = event => {\n    let text = event.target.value;\n    setReminderText(text);\n  }\n\n  const handleTimeChange = time => {\n    console.log(time);\n    let realTime = getRightTimeDate(props.reminder.selectedDate, time);\n    setSelectedTime(realTime);\n  }\n\n  const handleEditReminder = e => {\n    e.preventDefault();\n\n    let reminder = {\n      id: props.reminder.id,\n      selectedDate: props.reminder.selectedDate,\n      reminderDate: selectedTime,\n      text: reminderText,\n      time: getPrettyTime(selectedTime)\n    };\n\n    props.editReminder(reminder);\n    props.closeReminderList();\n  }\n\n  const handleDeleteReminder = e => {\n    e.preventDefault();\n\n    let reminder = {\n      id: props.reminder.id,\n      selectedDate: props.reminder.selectedDate,\n      reminderDate: selectedTime,\n      text: reminderText,\n      time: getPrettyTime(selectedTime)\n    };\n\n    props.deleteReminder(reminder);\n    props.closeReminderList();\n  }\n\n\n  return (\n    <form onSubmit={handleEditReminder} className={classes.container} noValidate autoComplete=\"off\">\n      <FormControl required={true}>\n        <div className=\"row\">\n          <TextField\n            placeholder={props.reminder.text}\n            required\n            type=\"text\"\n            id=\"standard-basic\"\n            className={classes.textField}\n            margin=\"normal\"\n            onChange={handleTextChange}\n          />\n        </div>\n        <div className=\"row\">\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <div className=\"col-md-6\">\n              <KeyboardTimePicker\n                className={classes.datePickers}\n                id=\"time-picker\"\n                label=\"Time picker\"\n                value={selectedTime}\n                onChange={handleTimeChange}\n                KeyboardButtonProps={{\n                  'aria-label': 'change time',\n                }}\n              />\n            </div>\n          </MuiPickersUtilsProvider>\n        </div>\n        <div className=\"row\">\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={handleEditReminder}\n          >\n            Edit\n          </Button>\n          <Button\n            type=\"submit\"\n            color=\"secondary\"\n            className={classes.button}\n            onClick={handleDeleteReminder}\n          >\n            Delete\n          </Button>\n\n        </div>\n      </FormControl>\n    </form>\n  );\n}\n\nexport default ExpansionReminder;\n"]},"metadata":{},"sourceType":"module"}