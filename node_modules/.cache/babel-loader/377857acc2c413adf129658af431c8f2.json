{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shubh\\\\Pictures\\\\Camera Roll\\\\calendar-scheduler-master\\\\src\\\\components\\\\ReminderPopOverComponent\\\\form-components\\\\ReminderForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport 'date-fns';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Button from '@material-ui/core/Button';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker } from '@material-ui/pickers';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { getPrettyTime, getRightTimeDate } from \"../../../utils/date-functions\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: \"10px\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  },\n  datePickers: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    width: 150\n  },\n  button: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst ReminderForm = props => {\n  _s();\n\n  const classes = useStyles();\n  const [reminderText, setReminderText] = React.useState(\"\");\n  const [selectedTime, setSelectedTime] = React.useState(new Date());\n\n  const handleTextChange = event => {\n    let text = event.target.value;\n    setReminderText(text);\n  };\n\n  const handleTimeChange = time => {\n    let realTime = getRightTimeDate(props.selectedDate, time);\n    setSelectedTime(realTime);\n  };\n\n  const submitReminder = e => {\n    e.preventDefault();\n    let reminder = {\n      id: \"id\" + (Math.random() * 1000).toString(),\n      selectedDate: props.selectedDate,\n      reminderDate: selectedTime,\n      text: reminderText,\n      time: getPrettyTime(selectedTime)\n    };\n    props.addReminder(reminder);\n    props.closePopOver();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitReminder,\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    type: \"text\",\n    id: \"standard-basic\",\n    className: classes.textField,\n    margin: \"normal\",\n    onChange: handleTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardTimePicker, {\n    className: classes.datePickers,\n    id: \"time-picker\",\n    label: \"Time picker\",\n    value: selectedTime,\n    onChange: handleTimeChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change time'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Add\"))));\n};\n\n_s(ReminderForm, \"gwWJ6e99TZSgAvmFmL7+10O0mak=\", false, function () {\n  return [useStyles];\n});\n\n_c = ReminderForm;\nexport default ReminderForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReminderForm\");","map":{"version":3,"sources":["C:/Users/shubh/Pictures/Camera Roll/calendar-scheduler-master/src/components/ReminderPopOverComponent/form-components/ReminderForm.js"],"names":["React","makeStyles","TextField","DateFnsUtils","Button","MuiPickersUtilsProvider","KeyboardTimePicker","FormControl","getPrettyTime","getRightTimeDate","useStyles","theme","container","padding","textField","marginLeft","spacing","marginRight","width","datePickers","marginTop","button","ReminderForm","props","classes","reminderText","setReminderText","useState","selectedTime","setSelectedTime","Date","handleTextChange","event","text","target","value","handleTimeChange","time","realTime","selectedDate","submitReminder","e","preventDefault","reminder","id","Math","random","toString","reminderDate","addReminder","closePopOver"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'date-fns';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker\n} from '@material-ui/pickers';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport {getPrettyTime, getRightTimeDate} from \"../../../utils/date-functions\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: \"10px\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400,\n  },\n  datePickers: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    width: 150,\n  },\n  button: {\n    marginTop: theme.spacing(2)\n  }\n\n}));\n\nconst ReminderForm = (props) => {\n  const classes = useStyles();\n\n  const [reminderText, setReminderText] = React.useState(\"\");\n  const [selectedTime, setSelectedTime] = React.useState(new Date());\n\n  const handleTextChange = event => {\n    let text = event.target.value;\n    setReminderText(text);\n  }\n\n  const handleTimeChange = time => {\n    let realTime = getRightTimeDate(props.selectedDate, time);\n    setSelectedTime(realTime);\n  }\n\n  const submitReminder = (e) => {\n    e.preventDefault();\n\n    let reminder = {\n      id: \"id\"+(Math.random() * 1000).toString(),\n      selectedDate: props.selectedDate,\n      reminderDate: selectedTime,\n      text: reminderText,\n      time: getPrettyTime(selectedTime)\n    };\n\n    props.addReminder(reminder);\n    props.closePopOver();\n  }\n\n  return (\n    <form onSubmit={submitReminder} className={classes.container} noValidate autoComplete=\"off\">\n      <FormControl required={true}>\n        <div className=\"row\">\n          <TextField\n            required\n            type=\"text\"\n            id=\"standard-basic\"\n            className={classes.textField}\n            margin=\"normal\"\n            onChange={handleTextChange}\n          />\n        </div>\n        <div className=\"row\">\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <div className=\"col-md-6\">\n            <KeyboardTimePicker\n                className={classes.datePickers}\n                id=\"time-picker\"\n                label=\"Time picker\"\n                value={selectedTime}\n                onChange={handleTimeChange}\n                KeyboardButtonProps={{\n                  'aria-label': 'change time',\n                }}\n              />\n            </div>\n          </MuiPickersUtilsProvider>\n        </div>\n        <div className=\"row\">\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            className={classes.button}\n          >\n            Add\n          </Button>\n        </div>\n      </FormControl>\n    </form>\n  );\n}\n\nexport default ReminderForm;\n"]},"metadata":{},"sourceType":"module"}