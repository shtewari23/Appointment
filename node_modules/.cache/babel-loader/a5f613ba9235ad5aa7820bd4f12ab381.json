{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shubh\\\\Pictures\\\\Camera Roll\\\\calendar-scheduler-master\\\\src\\\\components\\\\ReminderListComponent\\\\ReminderListComponent.js\";\nimport React, { Component } from 'react';\nimport Popover from \"@material-ui/core/Popover\";\nimport { withStyles } from '@material-ui/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport * as dateFns from \"date-fns\";\nimport { MonthDayYearFormat } from \"../../utils/date-formats\";\nimport { closePopOverAction, closeReminderListAction, selectDateAction } from \"../../redux/actions/calendarActions\";\nimport { addReminderAction, deleteReminderAction, editReminderAction } from \"../../redux/actions/reminderActions\";\nimport PropTypes from \"prop-types\";\nimport connect from \"react-redux/es/connect/connect\";\nimport ReminderList from \"./reminder-list/ReminderList\";\nimport { getRemindersOfDate, orderRemindersFromDateAsc } from \"../../utils/date-functions\";\nconst styles = {\n  typography: {\n    padding: \"10px\"\n  }\n};\n\nclass ReminderListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.props.closeReminderList();\n    };\n\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.closePopOver();\n  }\n\n  render() {\n    const {\n      classes,\n      openedReminderList,\n      anchorEl,\n      selectedDate,\n      reminders,\n      editReminder,\n      deleteReminder,\n      closeReminderList\n    } = this.props;\n    const id = openedReminderList ? 'simple-popover' : undefined;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Popover, {\n      id: id,\n      open: openedReminderList,\n      anchorEl: anchorEl,\n      onClose: this.handleClose,\n      anchorOrigin: {\n        vertical: 'center',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.typography,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Reminders for:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 18\n      }\n    }, dateFns.format(selectedDate, MonthDayYearFormat))), /*#__PURE__*/React.createElement(ReminderList, {\n      reminders: orderRemindersFromDateAsc(getRemindersOfDate(reminders, selectedDate)),\n      editReminder: editReminder,\n      deleteReminder: deleteReminder,\n      closeReminderList: closeReminderList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    selectedDate,\n    currentMonth,\n    openedReminderList,\n    anchorEl,\n    openedPopOver\n  } = state.calendar;\n  const {\n    reminders\n  } = state.reminder;\n  return {\n    selectedDate: selectedDate,\n    currentMonth: currentMonth,\n    openedReminderList: openedReminderList,\n    openedPopOver: openedPopOver,\n    anchorEl: anchorEl,\n    reminders: reminders\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  selectDate: date => dispatch(selectDateAction(date)),\n  closeReminderList: () => dispatch(closeReminderListAction()),\n  addReminder: reminder => dispatch(addReminderAction(reminder)),\n  editReminder: reminder => dispatch(editReminderAction(reminder)),\n  deleteReminder: reminder => dispatch(deleteReminderAction(reminder)),\n  closePopOver: () => dispatch(closePopOverAction())\n});\n\nReminderListComponent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ReminderListComponent));","map":{"version":3,"sources":["C:/Users/shubh/Pictures/Camera Roll/calendar-scheduler-master/src/components/ReminderListComponent/ReminderListComponent.js"],"names":["React","Component","Popover","withStyles","Typography","dateFns","MonthDayYearFormat","closePopOverAction","closeReminderListAction","selectDateAction","addReminderAction","deleteReminderAction","editReminderAction","PropTypes","connect","ReminderList","getRemindersOfDate","orderRemindersFromDateAsc","styles","typography","padding","ReminderListComponent","constructor","props","handleClose","closeReminderList","bind","componentDidMount","closePopOver","render","classes","openedReminderList","anchorEl","selectedDate","reminders","editReminder","deleteReminder","id","undefined","vertical","horizontal","format","mapStateToProps","state","currentMonth","openedPopOver","calendar","reminder","mapDispatchToProps","dispatch","selectDate","date","addReminder","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Popover from \"@material-ui/core/Popover\";\nimport { withStyles } from '@material-ui/styles';\n\nimport Typography from \"@material-ui/core/Typography\";\nimport * as dateFns from \"date-fns\";\nimport {MonthDayYearFormat} from \"../../utils/date-formats\";\nimport {\n  closePopOverAction,\n  closeReminderListAction,\n  selectDateAction\n} from \"../../redux/actions/calendarActions\";\n\nimport { addReminderAction, deleteReminderAction, editReminderAction } from \"../../redux/actions/reminderActions\";\n\nimport PropTypes from \"prop-types\";\nimport connect from \"react-redux/es/connect/connect\";\nimport ReminderList from \"./reminder-list/ReminderList\";\nimport { getRemindersOfDate, orderRemindersFromDateAsc } from \"../../utils/date-functions\";\n\nconst styles =  ({\n  typography: {\n    padding: \"10px\",\n  },\n});\n\n\nclass ReminderListComponent extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.closePopOver();\n  }\n\n  handleClose= () => {\n    this.props.closeReminderList();\n  }\n\n  render() {\n    const { classes,\n      openedReminderList,\n      anchorEl,\n      selectedDate,\n      reminders,\n      editReminder,\n      deleteReminder,\n      closeReminderList\n    } = this.props;\n\n    const id = openedReminderList ? 'simple-popover' : undefined;\n\n\n    return (\n      <div>\n        <Popover\n          id={id}\n          open={openedReminderList}\n          anchorEl={anchorEl}\n          onClose={this.handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography className={classes.typography}>\n            Reminders for:\n            <br/><b>{dateFns.format(selectedDate, MonthDayYearFormat)}</b>\n          </Typography>\n\n          <ReminderList\n            reminders={orderRemindersFromDateAsc(getRemindersOfDate(reminders, selectedDate))}\n            editReminder={editReminder}\n            deleteReminder={deleteReminder}\n            closeReminderList={closeReminderList}\n          />\n\n        </Popover>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  const {\n    selectedDate,\n    currentMonth,\n    openedReminderList,\n    anchorEl,\n    openedPopOver\n  } = state.calendar;\n\n  const {\n    reminders\n  } = state.reminder;\n\n\n\n  return {\n    selectedDate: selectedDate,\n    currentMonth: currentMonth,\n    openedReminderList: openedReminderList,\n    openedPopOver: openedPopOver,\n    anchorEl: anchorEl,\n    reminders: reminders\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  selectDate: (date) => dispatch(selectDateAction(date)),\n  closeReminderList: () => dispatch(closeReminderListAction()),\n  addReminder: (reminder) => dispatch(addReminderAction(reminder)),\n  editReminder: (reminder) => dispatch(editReminderAction(reminder)),\n  deleteReminder: (reminder) => dispatch(deleteReminderAction(reminder)),\n  closePopOver: () => dispatch(closePopOverAction())\n});\n\n\n\nReminderListComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(ReminderListComponent));\n\n\n\n"]},"metadata":{},"sourceType":"module"}