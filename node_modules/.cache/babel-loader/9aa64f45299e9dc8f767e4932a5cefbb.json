{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shubh\\\\Pictures\\\\Camera Roll\\\\calendar-scheduler-master\\\\src\\\\components\\\\ReminderListComponent\\\\reminder-list\\\\ReminderList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpansionReminder from \"./ExpansionReminder\";\nimport { orderRemindersFromDateAsc } from \"../../../utils/date-functions\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst ReminderList = props => {\n  _s();\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  React.useEffect(() => {\n    orderRemindersFromDateAsc(props.reminders);\n  });\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, props.reminders.map((el, index) => /*#__PURE__*/React.createElement(ExpansionPanel, {\n    expanded: expanded === 'panel' + el.id,\n    onChange: handleChange('panel' + el.id),\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }),\n    \"aria-controls\": \"panel\" + el.id + \"bh-content\",\n    id: \"panel\" + el.id + \"bh-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, el.text)), /*#__PURE__*/React.createElement(ExpansionReminder, {\n    reminder: el,\n    editReminder: props.editReminder,\n    deleteReminder: props.deleteReminder,\n    closeReminderList: props.closeReminderList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(ReminderList, \"Vp4IDa/0HtXUw7FqqMRSnVwkSSI=\", false, function () {\n  return [useStyles];\n});\n\n_c = ReminderList;\nexport default ReminderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReminderList\");","map":{"version":3,"sources":["C:/Users/shubh/Pictures/Camera Roll/calendar-scheduler-master/src/components/ReminderListComponent/reminder-list/ReminderList.js"],"names":["React","makeStyles","ExpansionPanel","ExpansionPanelSummary","Typography","ExpandMoreIcon","ExpansionReminder","orderRemindersFromDateAsc","useStyles","theme","root","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","ReminderList","props","classes","expanded","setExpanded","useState","useEffect","reminders","handleChange","panel","event","isExpanded","map","el","index","id","editReminder","deleteReminder","closeReminderList"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpansionReminder from \"./ExpansionReminder\";\nimport {orderRemindersFromDateAsc} from \"../../../utils/date-functions\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst ReminderList = (props) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n\n  React.useEffect(() => {\n    orderRemindersFromDateAsc(props.reminders);\n  });\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n\n      { props.reminders.map((el, index) =>\n        <ExpansionPanel expanded={expanded === 'panel'+ el.id} onChange={handleChange('panel'+el.id)} key={index}>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls={\"panel\" + el.id + \"bh-content\"}\n            id={\"panel\"+el.id+\"bh-header\"}\n          >\n            <Typography className={classes.heading}>{el.text}</Typography>\n          </ExpansionPanelSummary>\n\n          <ExpansionReminder\n            reminder={el}\n            editReminder={props.editReminder}\n            deleteReminder={props.deleteReminder}\n            closeReminderList={props.closeReminderList}\n          />\n        </ExpansionPanel>\n      )}\n    </div>\n  );\n}\n\n\nexport default ReminderList;\n"]},"metadata":{},"sourceType":"module"}