{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shubh\\\\Pictures\\\\Camera Roll\\\\calendar-scheduler-master\\\\src\\\\components\\\\CalendarComponent\\\\CalendarComponent.js\";\nimport React from \"react\";\nimport * as dateFns from 'date-fns';\nimport './CalendarComponent.css';\nimport connect from \"react-redux/es/connect/connect\";\nimport ReminderPopOverComponent from \"../ReminderPopOverComponent/ReminderPopOverComponent\";\nimport CalendarHeader from './CalendarHeader';\nimport CalendarWeekDays from './CalendarWeekDays';\nimport CalendarCells from './CalendarCells';\nimport { closePopOverAction, closeReminderListAction, getCurrentMonthAction, openPopOverAction, openReminderListAction, selectDateAction, setAnchorElAction } from \"../../redux/actions/calendarActions\";\nimport ReminderListComponent from \"../ReminderListComponent\";\n\nclass CalendarComponent extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onDateClick = day => {\n      this.props.selectDate(day);\n    };\n\n    this.onClickPopOver = event => {\n      this.props.setAnchorEl(event.currentTarget);\n      this.props.openPopOver();\n    };\n\n    this.onClickReminderList = event => {\n      event.stopPropagation();\n      this.props.setAnchorEl(event.currentTarget);\n      this.props.openReminderList();\n      this.props.closePopOver();\n      return false;\n    };\n\n    this.nextMonth = () => {\n      let nextMonth = dateFns.addMonths(this.props.currentMonth, 1);\n      this.props.getCurrentMonth(nextMonth);\n    };\n\n    this.prevMonth = () => {\n      let prevMonth = dateFns.subMonths(this.props.currentMonth, 1);\n      this.props.getCurrentMonth(prevMonth);\n    };\n  }\n\n  render() {\n    const {\n      selectedDate,\n      currentMonth,\n      reminders\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CalendarHeader, {\n      currentMonth: currentMonth,\n      prevMonth: this.prevMonth,\n      nextMonth: this.nextMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CalendarWeekDays, {\n      currentMonth: currentMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CalendarCells, {\n      currentMonth: currentMonth,\n      selectedDate: selectedDate,\n      reminders: reminders,\n      onDateClick: this.onDateClick,\n      onClickPopOver: this.onClickPopOver,\n      onClickReminderList: this.onClickReminderList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ReminderPopOverComponent, {\n      openPopOver: this.props.openedPopOver,\n      closePopOver: this.props.closePopOver,\n      anchorEl: this.props.anchorEl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ReminderListComponent, {\n      openReminderList: this.props.openedReminderList,\n      closeReminderList: this.props.closeReminderList,\n      closePopOver: this.props.closePopOver,\n      anchorEl: this.props.anchorEl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    selectedDate,\n    currentMonth,\n    openedPopOver,\n    openedReminderList,\n    anchorEl\n  } = state.calendar;\n  const {\n    reminders\n  } = state.reminder;\n  return {\n    selectedDate: selectedDate,\n    currentMonth: currentMonth,\n    openedPopOver: openedPopOver,\n    openedReminderList: openedReminderList,\n    anchorEl: anchorEl,\n    reminders: reminders\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  selectDate: date => dispatch(selectDateAction(date)),\n  getCurrentMonth: date => dispatch(getCurrentMonthAction(date)),\n  openPopOver: () => dispatch(openPopOverAction()),\n  closePopOver: () => dispatch(closePopOverAction()),\n  openReminderList: () => dispatch(openReminderListAction()),\n  closeReminderList: () => dispatch(closeReminderListAction()),\n  setAnchorEl: e => dispatch(setAnchorElAction(e))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarComponent);","map":{"version":3,"sources":["C:/Users/shubh/Pictures/Camera Roll/calendar-scheduler-master/src/components/CalendarComponent/CalendarComponent.js"],"names":["React","dateFns","connect","ReminderPopOverComponent","CalendarHeader","CalendarWeekDays","CalendarCells","closePopOverAction","closeReminderListAction","getCurrentMonthAction","openPopOverAction","openReminderListAction","selectDateAction","setAnchorElAction","ReminderListComponent","CalendarComponent","Component","onDateClick","day","props","selectDate","onClickPopOver","event","setAnchorEl","currentTarget","openPopOver","onClickReminderList","stopPropagation","openReminderList","closePopOver","nextMonth","addMonths","currentMonth","getCurrentMonth","prevMonth","subMonths","render","selectedDate","reminders","openedPopOver","anchorEl","openedReminderList","closeReminderList","mapStateToProps","state","calendar","reminder","mapDispatchToProps","dispatch","date","e"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as dateFns from 'date-fns';\nimport './CalendarComponent.css';\nimport connect from \"react-redux/es/connect/connect\";\nimport ReminderPopOverComponent from \"../ReminderPopOverComponent/ReminderPopOverComponent\";\nimport CalendarHeader from './CalendarHeader';\nimport CalendarWeekDays from './CalendarWeekDays';\nimport CalendarCells from './CalendarCells';\n\nimport {\n  closePopOverAction, closeReminderListAction,\n  getCurrentMonthAction,\n  openPopOverAction, openReminderListAction,\n  selectDateAction,\n  setAnchorElAction\n} from \"../../redux/actions/calendarActions\";\n\nimport ReminderListComponent from \"../ReminderListComponent\";\n\nclass CalendarComponent extends React.Component {\n\n  onDateClick = day => {\n    this.props.selectDate(day);\n  };\n\n  onClickPopOver = event => {\n    this.props.setAnchorEl(event.currentTarget);\n    this.props.openPopOver();\n  }\n\n  onClickReminderList = event => {\n    event.stopPropagation();\n    this.props.setAnchorEl(event.currentTarget);\n    this.props.openReminderList();\n    this.props.closePopOver();\n    return false;\n  }\n\n\n  nextMonth = () => {\n    let nextMonth = dateFns.addMonths(this.props.currentMonth, 1);\n    this.props.getCurrentMonth(nextMonth);\n  };\n\n  prevMonth = () => {\n    let prevMonth = dateFns.subMonths(this.props.currentMonth, 1);\n    this.props.getCurrentMonth(prevMonth);\n  };\n\n  render() {\n    const { selectedDate, currentMonth, reminders } = this.props;\n\n    return (\n      <div className=\"calendar\">\n        <CalendarHeader\n          currentMonth={currentMonth}\n          prevMonth={this.prevMonth}\n          nextMonth={this.nextMonth}\n        />\n        <CalendarWeekDays\n          currentMonth={currentMonth}\n        />\n\n        <CalendarCells\n          currentMonth={currentMonth}\n          selectedDate={selectedDate}\n          reminders={reminders}\n          onDateClick={this.onDateClick}\n          onClickPopOver={this.onClickPopOver}\n          onClickReminderList={this.onClickReminderList}\n        />\n\n        <ReminderPopOverComponent\n          openPopOver={this.props.openedPopOver}\n          closePopOver={this.props.closePopOver}\n          anchorEl={this.props.anchorEl}\n        />\n\n        <ReminderListComponent\n          openReminderList={this.props.openedReminderList}\n          closeReminderList={this.props.closeReminderList}\n          closePopOver={this.props.closePopOver}\n          anchorEl={this.props.anchorEl}\n        />\n\n        \n      </div>\n    );\n  }\n}\n\n\n\nconst mapStateToProps = state => {\n  const {\n    selectedDate,\n    currentMonth,\n    openedPopOver,\n    openedReminderList,\n    anchorEl\n  } = state.calendar;\n\n  const {\n    reminders\n  } = state.reminder;\n\n  return {\n    selectedDate: selectedDate,\n    currentMonth: currentMonth,\n    openedPopOver: openedPopOver,\n    openedReminderList: openedReminderList,\n    anchorEl: anchorEl,\n    reminders: reminders\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  selectDate: (date) => dispatch(selectDateAction(date)),\n  getCurrentMonth: (date) => dispatch(getCurrentMonthAction(date)),\n  openPopOver: () => dispatch(openPopOverAction()),\n  closePopOver: () => dispatch(closePopOverAction()),\n  openReminderList: () => dispatch(openReminderListAction()),\n  closeReminderList: () => dispatch(closeReminderListAction()),\n  setAnchorEl: (e) => dispatch(setAnchorElAction(e))\n});\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CalendarComponent);\n\n\n"]},"metadata":{},"sourceType":"module"}